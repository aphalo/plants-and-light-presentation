---
title: "Plants and Light"
subtitle: "Light as Source of Energy and Information"
author: "Pedro J. Aphalo"
date: 2025-02-25
format:
  revealjs: 
    theme: default
---

```{r, include=FALSE}
library(lubridate)
library(ggspectra)
library(ggpp)
library(ggrepel)
library(gganimate)
library(patchwork)
library(photobiologyWavebands)
library(photobiologySun)
library(photobiologyPlants)
library(photobiologyLamps)
library(photobiologyLEDs)

theme_set(theme_minimal(14))
photon_as_default()
```

## Plant-Light Interactions

```{mermaid}
flowchart LR
L((Light)) --> Ph[Photoreceptors<br/> _very low concentration_]
Ph --> In[Information] --> Rg[[Regulation<br/>photomorphogenesis]]
L --> Sc[Screening pigments<br/> _variable concentration_] 
Sc --> Ed[Energy dissipation] --> Pr[[Protection<br/>from damage]]
L --> Lh[Light-harvesting pigments<br/> _high concentration_] 
Lh --> Ps[Photosynthesis=<br/>Energy converssion] --> Gr[[Biomass<br/>plant growth]]

```

![Tomato: Responses to the spectrum at equal photon irradiance.](figures/tomatos.jpg)

## Light Actions 

```{r, echo=FALSE, fig.asp=0.5, fig.width= 6}
#| label: fig-photoreceptors
#| fig-cap: Range of wavelengths sensed through different higher-plant photoreceptor families (black "information acquisition") or driving photoreactions (orange "energy dependent"). DNA damage and repair, photosynthesis and photoreceptors; CRY&#58; cryptochromes 1 and 2, PHOT&#58; phototropins 1 and 2, ZTL&#58; Zeitlupe, UVR8&#58; "UV-B" photoreceptor, PHY&#58; phytochromes A/B/C/D/E.

photoreceptors.df <- data.frame(
  Receptor = factor(c("UVR8", "PHOT", "CRY", "ZTL", "PHY", "PHY", "Photosynthesis", "DNA repair", "DNA damage"), 
  levels = c("UVR8", "ZTL", "PHOT", "CRY", "PHY", "Photosynthesis", "DNA repair", "DNA damage")),
  low.wl = c(260, 360, 350, 350, 590, NA, 400, 355, 250),
  high.wl = c(340, 480, 500, 410, 780, NA, 700, 430, 315),
  min.wl = c(250, 340, 320, 340, 560, 350, 370, 320, 250),
  max.wl = c(345, 500, 600, 490, 790, 480, 750, 450, 330)
)

ggplot(photoreceptors.df, aes(y = Receptor)) +
  geom_vline(xintercept = 293, linetype = "dashed") +
  geom_segment(aes(x = low.wl, xend= high.wl, 
                   colour = ifelse(Receptor %in% c("Photosynthesis", "DNA damage", "DNA repair"), "orange", "black")), 
               linewidth = 5, na.rm = TRUE) +
  geom_segment(aes(x = min.wl, xend= max.wl, 
                   colour = ifelse(Receptor %in% c("Photosynthesis", "DNA damage", "DNA repair"), "orange", "black")), linewidth = 3, alpha = 0.4) +
scale_x_continuous(name = "Wavelength (nm)", 
                   breaks = (1:9) * 100) +
labs(y = "Receptor or reaction") +
scale_color_identity() +
theme_minimal()

```

## Light Screening and Absorption

```{r, echo=FALSE, fig.asp=0.33, fig.width= 6}
#| label: fig-pigments-leaves
#| fig-cap: Optical properties of leaves (green) and protective light-screening pigments (dark red). Thick lines indicate high absorption and paler narrower lines moderate absorption by pigments, or absorptance, reflectance or transmittance for whole leaves. 

photoreceptors.df <- data.frame(
  Receptor = factor(c("Flavonoids", "Phenolic acids", "Anthocyanins", "Leaf reflectance\nand transmittance", "Leaf absorptance"), 
  levels = c("Flavonoids", "Phenolic acids", "Anthocyanins", "Leaf reflectance\nand transmittance", "Leaf absorptance")),
  low.wl = c(340, 280, 470, 750, 250),
  high.wl = c(380, 350, 560, 1000, 705),
  min.wl = c(250, 250, 320, 250, 250),
  max.wl = c(400, 370, 590, 1000, 750),
  colour = c(rep("darkred", 3), rep("darkgreen", 2))
)

ggplot(photoreceptors.df, aes(y = Receptor)) +
  geom_vline(xintercept = 293, linetype = "dashed") +
  geom_segment(aes(x = low.wl, xend= high.wl, colour = colour), 
               linewidth = 5, na.rm = TRUE) +
  geom_segment(aes(x = min.wl, xend= max.wl, colour = colour), 
               linewidth = 3, alpha = 0.4) +
scale_x_continuous(name = "Wavelength (nm)", 
                   breaks = (1:9) * 100) +
labs(y = "Pigment or object") +
scale_color_identity() +
theme_minimal()

```
## Sun through a day

```{r, include=FALSE}
# prepare data
sun_one_day.spct <- sun_hourly_august.spct
sun_one_day.spct <- subset(sun_one_day.spct, day(UTC) == 21)
sun_one_day.spct <- setIdFactor(sun_one_day.spct, idfactor = "UTC")
idfactor <- getIdFactor(sun_one_day.spct)
sun_one_day.spct[["time"]] <- sun_one_day.spct[[idfactor]]
sun_one_day.spct[[idfactor]] <- factor(sun_one_day.spct[[idfactor]])
```

```{r, echo=FALSE, warning=FALSE}
#| label: fig-spectra-whole-day-anim
#| fig-cap: Time series of scaled spectral photon irradiance during one day. Hourly mean spectra scaled to PAR = 1000 $\mu mol\,s^{-1}\,m^{-2}$ to emphasize the change in shape. Simulated with libradtran including the effect of clouds for Kumpula, Helsinki, Finland. Data from Andes Lindfors.

anim <- ggplot(data = fscale(sun_one_day.spct, f = q_irrad, target = 1e-3, w.band = PAR()),
               unit.out = "photon") +
  geom_spct() +
  scale_x_wl_continuous() +
  scale_y_s.q.irrad_continuous(name = s.q.irrad_label(scaled = TRUE)) +
  transition_states(get(idfactor),
                    transition_length = 2,
                    state_length = 1) +
  ggtitle('Now showing {closest_state} UTC',
          subtitle = 'Frame {frame} of {nframes}')
animate(anim, duration = 20, fps = 10)
```

## Sun through four days

```{r, echo=FALSE}
#| label: fig-PAR-four-days
#| fig-cap: Time course of PAR, UV-A and UV-B photon irradiance during four consecutive days with different cloud conditions. Measured with broad band-sensors at Viikki, Helsinki, Finland. The values plotted are 1 min means from measurements once every 5 s. The step changes at very low sun elevations are caused by shading from far-away buildings.

((ggplot(four_days_1min.data, aes(time_EET, PAR_umol)) +
  geom_spct() +
    annotate(geom = "text_npc", label = "PAR", npcy = 0.95, npcx = 0.05) +
    labs(x = "Local time", y = "")) /
(ggplot(four_days_1min.data, aes(time_EET, UVA_umol)) +
  geom_spct() +
    annotate(geom = "text_npc", label = "UV-A", npcy = 0.95, npcx = 0.05) +
    labs(x = "Local time", y = expression("Photon irradiance "*(mu*mol~s^{-1}~m^{-2})))) /
(ggplot(four_days_1min.data, aes(time_EET, UVB_umol)) +
  geom_spct()) +
    annotate(geom = "text_npc", label = "UV-B", npcy = 0.95, npcx = 0.05) +
    labs(x = "Time", y = "")) + 
  plot_layout(axes = 'collect')
```

## LED-based grow lights (luminaires)

```{r}
autoplot(lamps.mspct[plant_grow_lamps[1:4]], 
         range = c(350, 900), span = 31,
         annotations = c("-", "summaries"), facets = 2) + 
  theme(legend.position = "none")
```

## Grow LEDs (components)

```{r}
autoplot(leds.mspct[plant_grow_leds[c(1,2, 3, 5)]], 
         range = c(350, 900), span = 31,
         annotations = c("-", "summaries"), facets = 2) + 
  theme(legend.position = "none")
```
